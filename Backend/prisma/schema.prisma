// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Uses DATABASE_URL from the .env file
}

generator client {
  provider = "prisma-client-js"
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model students {
  student_id              String              @id @unique
  first_name              String
  last_name               String?
  email                   String              @unique
  password                String
  role                    String              @default("students")
  createdAt               DateTime            @default(now())
  student_about           String?             @default("This is default about")
  student_profile_picture String?             @default("https://res.cloudinary.com/dy8jwwm6j/image/upload/v1749538023/mala-avatar_iylbky.webp")
  student_skills          String[]            @default([])
  student_gender          Gender              @default(MALE)
  student_twitter         String?
  student_linkedin        String?
  student_github          String?
  student_address         String?
  student_university      String?
  student_mobile          String?
  purchased_courses       purchased_courses[]
  payments                payments[]

  @@map("students")
}

model purchased_courses {
  order_id      String   @id
  student_id    String
  course_id     String
  purchase_date DateTime @default(now())
  progress      Int

  student students @relation(fields: [student_id], references: [student_id], onDelete: Cascade)
  course  courses  @relation(fields: [course_id], references: [course_id], onDelete: Cascade)

  @@map("purchased_courses")
}

model teachers {
  teacher_id              String            @id @unique
  first_name              String
  last_name               String?
  email                   String            @unique
  password                String
  role                    String            @default("teachers")
  createdAt               DateTime          @default(now())
  teacher_about           String?           @default("This is default about")
  teacher_profile_picture String?           @default("https://res.cloudinary.com/dy8jwwm6j/image/upload/v1749538003/teacher-avatar_rsth0b.webp")
  teacher_skills          String[]          @default([])
  teacher_gender          Gender            @default(MALE)
  teacher_twitter         String?
  teacher_linkedin        String?
  teacher_github          String?
  teacher_address         String?
  teacher_university      String?
  teacher_courses         teacher_courses[]
  payments                payments[]

  @@map("teachers")
}

model teacher_courses {
  id         Int      @id @default(autoincrement())
  teacher_id String
  course_id  String
  creation   DateTime @default(now())
  teacher    teachers @relation(fields: [teacher_id], references: [teacher_id], onDelete: Cascade)
  course     courses  @relation(fields: [course_id], references: [course_id], onDelete: Cascade)

  @@map("teacher_courses")
}

model courses {
  course_id                  String              @id @unique
  course_title               String
  course_description         String
  course_price               Int
  course_thumbnail           String
  course_no_of_purchase      Int                 @default(0)
  course_total_no_hours      Decimal             @db.Decimal(10, 2)
  rating                     Decimal             @default(1.0) @db.Decimal(3, 1)
  creation                   DateTime            @default(now())
  course_preview_video       String              @default("https://res.cloudinary.com/dy8jwwm6j/video/upload/v1736872825/12927954_1920_1080_24fps_szansr.mp4")
  course_what_you_will_learn String[]            @default([])
  course_author              String              @default("John Doe")
  course_keywords            String[]            @default([])
  course_level               String              @default("Intermediate")
  purchased_courses          purchased_courses[]
  teacher_courses            teacher_courses[]
  lectures                   lectures[]
  payments                   payments[]

  @@map("courses")
}

model lectures {
  lecture_id             String   @id @unique
  course_id              String
  lecture_title          String
  lecture_description    String
  lecture_order          Int
  lecture_total_no_hours Decimal  @db.Decimal(10, 2)
  creation               DateTime @default(now())

  course courses  @relation(fields: [course_id], references: [course_id], onDelete: Cascade)
  videos videos[]

  @@map("lectures")
}

model videos {
  video_id                String   @id @unique
  lecture_id              String
  video_title             String
  video_url               String
  video_order             Int
  video_total_no_of_hours Decimal  @db.Decimal(10, 2)
  creation                DateTime @default(now())

  lecture lectures @relation(fields: [lecture_id], references: [lecture_id], onDelete: Cascade)

  @@map("videos")
}

model payments {
  order_id            String   @id @default(uuid())
  student             students @relation(fields: [student_id], references: [student_id], onDelete: Cascade)
  student_id          String
  teacher             teachers @relation(fields: [teacher_id], references: [teacher_id], onDelete: Cascade)
  teacher_id          String
  course              courses  @relation(fields: [course_id], references: [course_id], onDelete: Cascade)
  course_id           String
  amount              Int
  currency            String   @default("INR")
  payment_status      String   @default("PENDING")
  razorpay_order_id   String?  @unique
  razorpay_payment_id String?  @unique
  created_at          DateTime @default(now())
}
